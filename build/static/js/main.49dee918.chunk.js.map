{"version":3,"sources":["helpers.js","components/StorePicker.js","components/NotFound.js","components/Header.js","components/Order.js","components/AddFishForm.js","components/EditFishForm.js","components/Login.js","base.js","components/Inventory.js","sample-fishes.js","components/Fish.js","components/App.js","components/Router.js","index.js"],"names":["formatPrice","cents","toLocaleString","style","currency","rando","arr","Math","floor","random","length","getFunName","adjectives","concat","StorePicker","myInput","React","createRef","goToStore","event","preventDefault","storeName","_this","current","value","props","history","push","react_default","a","createElement","className","onSubmit","this","type","required","placeholder","defaultValue","ref","Component","NotFound","Header","_ref","tagline","Order","renderOrder","key","fish","fishes","count","order","isAvailable","status","react_transition_group","classNames","timeout","enter","exit","component","name","price","onClick","removeFromOrder","_this2","orderIds","Object","keys","total","reduce","prevTotal","map","AddFishForm","nameRef","priceRef","statusRef","descRef","imageRef","createFish","parseFloat","desc","image","addFish","currentTarget","reset","EditFishForm","handleChange","updatedFish","objectSpread","defineProperty","updateFish","index","onChange","deleteFish","Login","authenticate","firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","base","Rebase","createClass","database","Inventory","state","uid","owner","authHandler","_callee","authData","store","regenerator_default","wrap","_context","prev","next","fetch","storeId","context","assertThisInitialized","sent","console","log","post","data","user","setState","stop","provider","authProvider","auth","signInWithPopup","then","logout","_callee2","_context2","signOut","onAuthStateChanged","_this3","components_EditFishForm","components_AddFishForm","loadSampleFishes","components_Login","fish1","fish2","fish3","fish4","fish5","fish6","fish7","fish8","fish9","Fish","handleClick","addToOrder","_this$props$details","details","src","alt","disabled","App","Date","now","sampleFishes","params","match","localStorageRef","localStorage","getItem","JSON","parse","syncState","setItem","stringify","removeBinding","components_Header","components_Fish","components_Order","components_Inventory","Router","BrowserRouter","Switch","Route","exact","path","render","components_Router","document","querySelector"],"mappings":"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","file":"static/js/main.49dee918.chunk.js","sourcesContent":["export function formatPrice(cents) {\n  return (cents / 100).toLocaleString(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\"\n  });\n}\n\nexport function rando(arr) {\n  return arr[Math.floor(Math.random() * arr.length)];\n}\n\nexport function slugify(text) {\n  return text\n    .toString()\n    .toLowerCase()\n    .replace(/\\s+/g, \"-\")\n    .replace(/[^\\w-]+/g, \"\")\n    .replace(/--+/g, \"-\")\n    .replace(/^-+/, \"\")\n    .replace(/-+$/, \"\");\n}\n\nexport function getFunName() {\n  const adjectives = [\n    \"adorable\",\n    \"beautiful\",\n    \"clean\",\n    \"drab\",\n    \"elegant\",\n    \"fancy\",\n    \"glamorous\",\n    \"handsome\",\n    \"long\",\n    \"magnificent\",\n    \"old-fashioned\",\n    \"plain\",\n    \"quaint\",\n    \"sparkling\",\n    \"ugliest\",\n    \"unsightly\",\n    \"angry\",\n    \"bewildered\",\n    \"clumsy\",\n    \"defeated\",\n    \"embarrassed\",\n    \"fierce\",\n    \"grumpy\",\n    \"helpless\",\n    \"itchy\",\n    \"jealous\",\n    \"lazy\",\n    \"mysterious\",\n    \"nervous\",\n    \"obnoxious\",\n    \"panicky\",\n    \"repulsive\",\n    \"scary\",\n    \"thoughtless\",\n    \"uptight\",\n    \"worried\"\n  ];\n\n  const nouns = [\n    \"women\",\n    \"men\",\n    \"children\",\n    \"teeth\",\n    \"feet\",\n    \"people\",\n    \"leaves\",\n    \"mice\",\n    \"geese\",\n    \"halves\",\n    \"knives\",\n    \"wives\",\n    \"lives\",\n    \"elves\",\n    \"loaves\",\n    \"potatoes\",\n    \"tomatoes\",\n    \"cacti\",\n    \"foci\",\n    \"fungi\",\n    \"nuclei\",\n    \"syllabuses\",\n    \"analyses\",\n    \"diagnoses\",\n    \"oases\",\n    \"theses\",\n    \"crises\",\n    \"phenomena\",\n    \"criteria\",\n    \"data\"\n  ];\n\n  return `${rando(adjectives)}-${rando(adjectives)}-${rando(nouns)}`;\n}\n","import React from 'react';\nimport { getFunName } from '../helpers';\n\nclass StorePicker extends React.Component{\n    myInput = React.createRef();\n\n    goToStore = event => {\n        event.preventDefault();\n        const storeName = this.myInput.current.value;\n        this.props.history.push(`/store/${storeName}`)\n    }\n\n    render(){\n        return (\n        <form className=\"store-selector\" onSubmit={this.goToStore}>\n            <h2>Please Enter A Store</h2>\n            <input type=\"text\" required placeholder=\"Store Name\" defaultValue={getFunName()} ref={this.myInput}/>\n            <button type=\"submit\">Visit Store</button>\n        </form>\n        )\n    }\n}\n\nexport default StorePicker;","import React from 'react';\n\nconst NotFound = () => (\n    <div>\n        <h2>404 Not Found!!!!</h2>\n    </div>\n)\n\nexport default NotFound;","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nfunction Header({tagline}) {\n\treturn (\n\t\t<header className=\"top\">\n\t\t\t<h1>\n\t\t\t\tCatch\n\t\t\t\t<span className=\"ofThe\">\n\t\t\t\t\t<span className=\"of\">Of</span>\n\t\t\t\t\t<span className=\"the\">The</span>\n\t\t\t\t</span>\n\t\t\t\tDay\n\t\t\t</h1>\n\t\t\t<h3 className=\"tagline\">\n\t\t\t\t<span>{tagline}</span>\n\t\t\t</h3>\n\t\t</header>\n\t);\n\n}\n\nHeader.propTypes = {\n\ttagline: PropTypes.string.isRequired\n}\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { formatPrice } from '../helpers';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\n\n\nclass Order extends React.Component {\n    static propTypes = {\n        fishes: PropTypes.object,\n        order: PropTypes.object,\n        removeFromOrder: PropTypes.func\n    }\n\n    renderOrder = (key) => {\n        const fish = this.props.fishes[key];\n        const count = this.props.order[key];\n        const isAvailable = fish && fish.status === 'available';\n        //make sure the fish is loaded below:\n        if(!fish) return null;\n        if(!isAvailable){\n            return (\n            <CSSTransition classNames=\"order\" key={key} timeout={{enter:250, exit:250}}>\n                <li key={key} >Sorry {fish ? fish.name : \"fish\"} is no longer available</li>\n                </CSSTransition>\n                );\n        }\n        return (\n        <CSSTransition classNames=\"order\" key={key} timeout={{enter:250, exit:250}}>\n            <li key={key} >\n                <span>\n                    <TransitionGroup component=\"span\" className=\"count\">\n                        <CSSTransition classNames=\"count\" key={count} timeout={{enter:5000, exit:5000}}>\n                        <span>{count} </span>\n                        </CSSTransition>\n                    </TransitionGroup>\n            lbs {fish.name}\n            {formatPrice(count * fish.price)}\n            <button onClick={() => this.props.removeFromOrder(key)}>&times;</button>\n            </span>\n            </li>\n            </CSSTransition>\n            )\n    }\n\n    render(){\n        const orderIds = Object.keys(this.props.order);\n        const total = orderIds.reduce((prevTotal, key) => {\n            const fish = this.props.fishes[key];\n            const count = this.props.order[key];\n            const isAvailable = fish && fish.status === 'available';\n            if(isAvailable) {\n                return prevTotal + (count * fish.price);\n            }\n            return prevTotal;\n        }, 0);\n        return (\n            <div className=\"order-wrap\">\n                <h2>Order</h2>\n                <TransitionGroup component=\"ul\" className=\"order\" >\n                    {orderIds.map(this.renderOrder)}\n                </TransitionGroup>\n                    <div className=\"total\">\n                        Total:<strong>{formatPrice(total)}</strong>\n                    </div>\n                \n            </div>\n            )\n    }\n}\n\nexport default Order;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass AddFishForm extends React.Component {\n    nameRef = React.createRef();\n    priceRef = React.createRef();\n    statusRef = React.createRef();\n    descRef = React.createRef();\n    imageRef = React.createRef();\n\n    static propTypes = {\n        addFish: PropTypes.func\n    }\n\n    createFish = (event) => {\n        event.preventDefault();\n        const fish = {\n            name: this.nameRef.current.value,\n            price: parseFloat(this.priceRef.current.value), //parseFloat lets you keep your number as a number instead of as a string\n            status: this.statusRef.current.value,\n            desc: this.descRef.current.value,\n            image: this.imageRef.current.value\n        }\n        this.props.addFish(fish);\n        event.currentTarget.reset(); // standard for resetting the value of a form (clears it out on submit)\n    }\n\n    render(){\n        return (\n            <form className=\"fish-edit\" onSubmit={this.createFish} >\n                <input name=\"name\" ref={this.nameRef} type=\"text\" placeholder=\"Name\"/>\n                <input name=\"price\" ref={this.priceRef} type=\"text\" placeholder=\"Price\"/>\n                <select name=\"status\" ref={this.statusRef} >\n                    <option value=\"available\">Fresh!</option>\n                    <option value=\"unavailable\">Sold Out!</option>\n                </select>\n                <textarea name=\"desc\" ref={this.descRef} placeholder=\"Desc\"/>\n                <input name=\"image\" ref={this.imageRef} type=\"text\" placeholder=\"Image\"/>\n                <button type=\"submit\">+ Add Fish</button>\n            </form>\n            )\n    }\n}\n\nexport default AddFishForm;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass EditFishForm extends React.Component{\n    static propTypes = {\n        fish: PropTypes.shape({\n            image: PropTypes.string,\n            name: PropTypes.string,\n            desc: PropTypes.string,\n            status: PropTypes.string,\n            price: PropTypes.number\n        }),\n        updateFish: PropTypes.func,\n        index: PropTypes.string\n    }\n\n    handleChange = (event) => {\n        //take the one thing that changed on the form and update the value with the input\n        const updatedFish = {\n            ...this.props.fish,\n            [event.currentTarget.name]: event.currentTarget.value\n        }\n        this.props.updateFish(this.props.index, updatedFish)\n    }\n    render(){\n        return <div className=\"fish-edit\">\n            <input name=\"name\" type=\"text\" onChange={this.handleChange} value={this.props.fish.name} />\n                <input name=\"price\" type=\"text\" onChange={this.handleChange} value={this.props.fish.price} />\n                <select name=\"status\" type=\"text\" onChange={this.handleChange} value={this.props.fish.status} >\n                    <option value=\"available\">Fresh!</option>\n                    <option value=\"unavailable\">Sold Out!</option>\n                </select>\n                <textarea name=\"desc\" onChange={this.handleChange} value={this.props.fish.desc} />\n                <input name=\"image\" type=\"text\" onChange={this.handleChange} value={this.props.fish.image} />\n                <button onClick={()=> this.props.deleteFish(this.props.index)} >Remove Fish</button>\n        </div>\n    }\n}\n\nexport default EditFishForm;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Login = (props) => (\n    <nav className=\"login\">\n        <h2>Inventory Login</h2>\n        <p>Sign in to manage your store's inventory.</p>\n        <button className=\"github\" onClick={()=> props.authenticate('Github')}>Log In With Github</button>\n        <button className=\"facebook\" onClick={()=> props.authenticate('Facebook')}>Log In With Facebook</button>\n        <button className=\"twitter\" onClick={()=> props.authenticate('Twitter')}>Log In With Twitter</button>\n    </nav>\n)\n\nLogin.propTypes = {\n    authenticate: PropTypes.func.isRequired\n}\n\nexport default Login;","import Rebase from 're-base';\nimport firebase from 'firebase';\n\nconst firebaseApp = firebase.initializeApp({\n    apiKey: \"AIzaSyBFVnzH0KSFxX8XBRyQiEhkQqdqyrJeW_k\",\n    authDomain: \"catch-of-the-day-shaundai.firebaseapp.com\",\n    databaseURL: \"https://catch-of-the-day-shaundai.firebaseio.com\",\n  })\n\n  const base = Rebase.createClass(firebaseApp.database());\n\n  export { firebaseApp };\n\n  export default base;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport AddFishForm from './AddFishForm';\nimport EditFishForm from './EditFishForm';\nimport Login from './Login';\nimport firebase from 'firebase';\nimport base, { firebaseApp } from '../base';\n\nclass Inventory extends React.Component {\n    static propTypes = {\n        fishes: PropTypes.object,\n        addFish: PropTypes.func,\n        deleteFish: PropTypes.func,\n        updateFish: PropTypes.func,\n        loadSampleFishes: PropTypes.func\n    };\n\n    state = {\n        uid: null,\n        owner: null\n    }\n\n    //rechecks whether you are the owner when you manually refresh the page\n    componentDidMount(){\n        firebase.auth().onAuthStateChanged(user => {\n            if(user){\n                this.authHandler({ user });\n            }\n        })\n    }\n    authHandler = async (authData) => {\n        const store = await base.fetch(this.props.storeId, {context : this});\n        console.log(store);\n        if(!store.owner){\n            await base.post(`${this.props.storeId}/owner`, {\n                data: authData.user.uid\n            })\n        }\n        this.setState({\n            uid: authData.user.uid,\n            owner: store.owner || authData.user.uid\n        })\n    }\n    authenticate = (provider) => {\n        const authProvider = new firebase.auth[`${provider}AuthProvider`]();\n        firebaseApp\n        .auth()\n        .signInWithPopup(authProvider)\n        .then(this.authHandler);\n    }\n\n    logout = async () => {\n        console.log('Logging out...')\n        await firebase.auth().signOut();\n        this.setState({ uid: null });\n        }\n    render(){\n        //logout button - could also be its own separate component\n        const logout = <button onClick={this.logout}>Log Out</button>\n        //check if they are logged in\n        if(!this.state.uid){\n            return <Login authenticate={this.authenticate} />\n        }\n        //check if they are the rightful owner\n        if(this.state.uid !== this.state.owner){\n            return(\n                <div>\n                    <p>Sorry, you aren't the owner!</p>\n                    {logout}\n                </div>\n            )\n        }\n        //if they are the owner, render their inventory\n        return (\n            <div className=\"inventory\">\n                <h2>Inventory</h2>\n                {logout}\n                {Object.keys(this.props.fishes).map(key => <EditFishForm key={key} index={key} fish={this.props.fishes[key]} updateFish={this.props.updateFish} deleteFish={this.props.deleteFish} />)}\n                <AddFishForm addFish={this.props.addFish} />\n                <button onClick={this.props.loadSampleFishes} >Load Sample Fishes</button>\n            </div>\n            )\n    }\n}\n\nexport default Inventory;","// This is just some sample data so you don't have to think of your own!\nconst fishes = {\n  fish1: {\n    name: \"Pacific Halibut\",\n    image: \"/images/hali.jpg\",\n    desc:\n      \"Everyone’s favorite white fish. We will cut it to the size you need and ship it.\",\n    price: 1724,\n    status: \"available\"\n  },\n\n  fish2: {\n    name: \"Lobster\",\n    image: \"/images/lobster.jpg\",\n    desc:\n      \"These tender, mouth-watering beauties are a fantastic hit at any dinner party.\",\n    price: 3200,\n    status: \"available\"\n  },\n\n  fish3: {\n    name: \"Sea Scallops\",\n    image: \"/images/scallops.jpg\",\n    desc:\n      \"Big, sweet and tender. True dry-pack scallops from the icey waters of Alaska. About 8-10 per pound\",\n    price: 1684,\n    status: \"unavailable\"\n  },\n\n  fish4: {\n    name: \"Mahi Mahi\",\n    image: \"/images/mahi.jpg\",\n    desc:\n      \"Lean flesh with a mild, sweet flavor profile, moderately firm texture and large, moist flakes. \",\n    price: 1129,\n    status: \"available\"\n  },\n\n  fish5: {\n    name: \"King Crab\",\n    image: \"/images/crab.jpg\",\n    desc:\n      \"Crack these open and enjoy them plain or with one of our cocktail sauces\",\n    price: 4234,\n    status: \"available\"\n  },\n\n  fish6: {\n    name: \"Atlantic Salmon\",\n    image: \"/images/salmon.jpg\",\n    desc:\n      \"This flaky, oily salmon is truly the king of the sea. Bake it, grill it, broil it...as good as it gets!\",\n    price: 1453,\n    status: \"available\"\n  },\n\n  fish7: {\n    name: \"Oysters\",\n    image: \"/images/oysters.jpg\",\n    desc: \"A soft plump oyster with a sweet salty flavor and a clean finish.\",\n    price: 2543,\n    status: \"available\"\n  },\n\n  fish8: {\n    name: \"Mussels\",\n    image: \"/images/mussels.jpg\",\n    desc:\n      \"The best mussels from the Pacific Northwest with a full-flavored and complex taste.\",\n    price: 425,\n    status: \"available\"\n  },\n\n  fish9: {\n    name: \"Jumbo Prawns\",\n    image: \"/images/prawns.jpg\",\n    desc:\n      \"With 21-25 two bite prawns in each pound, these sweet morsels are perfect for shish-kabobs.\",\n    price: 2250,\n    status: \"available\"\n  }\n};\n\nexport default fishes;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { formatPrice } from '../helpers';\n\nclass Fish extends React.Component {\n    static propTypes = {\n        details: PropTypes.shape({\n            image: PropTypes.string,\n            name: PropTypes.string,\n            desc: PropTypes.string,\n            status: PropTypes.string,\n            price: PropTypes.number\n        }),\n        addToOrder: PropTypes.func\n    }\n\n    handleClick = () => {\n        this.props.addToOrder(this.props.index);\n    }\n    render(){\n        const { image, name, price, desc, status } = this.props.details; //destructuring like a bawse\n        const isAvailable = status === 'available';\n        return(\n            <li className='menu-fish'>\n                <img src={image} alt={name}/>\n                <h3 className=\"fish-name\">\n                    {name}\n                    <span className=\"price\">{formatPrice(price)}</span>\n                </h3>\n                <p>{desc}</p>\n                <button disabled={!isAvailable} onClick={this.handleClick} >{isAvailable ? \"Add To Cart\" : \"Sold Out!\"}</button>\n            </li>\n        )\n    }\n}\n\nexport default Fish;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Header from './Header';\nimport Order from './Order';\nimport Inventory from './Inventory';\nimport sampleFishes from '../sample-fishes';\nimport Fish from './Fish';\nimport base from '../base';\n\nclass App extends React.Component {\n    static propTypes = {\n        match: PropTypes.object\n    }\n\n    state = {\n        fishes: {},\n        order: {}\n    };\ncomponentDidMount(){\n    const { params } = this.props.match;\n    const localStorageRef = localStorage.getItem(params.storeId);\n    if(localStorageRef){\n        this.setState({\n            order: JSON.parse(localStorageRef)\n        })\n    }\n    this.ref = base.syncState(`${params.storeId}/fishes`, {\n        context: this,\n        state: 'fishes'\n    })\n}\n\ncomponentDidUpdate(){\n    localStorage.setItem(this.props.match.params.storeId, JSON.stringify(this.state.order))\n}\n\ncomponentWillUnmount(){\n    base.removeBinding(this.ref);\n}\n\n    addFish = fish => {\n        const fishes = { ...this.state.fishes }; // use spread operator to make a clone of existing state instead of mutating array\n        fishes[`fish${Date.now()}`] = fish; //uses date.now to create a new property on the this.state.fishes that will be a new fish object\n        this.setState({\n            fishes: fishes\n        })\n    }\n\n    updateFish = (key, updatedFish) => {\n        //take copy of the current state\n        const fishes = { ...this.state.fishes };\n        //update the state to that of the updatedFish we took in\n        fishes[key] = updatedFish\n        //set the state with the updatedFish'\n        this.setState({\n            fishes: fishes\n        })\n    }\n    deleteFish = key => {\n        //copy state\n        const fishes = {...this.state.fishes}\n        //set fish we don't want to null\n        fishes[key] = null;\n        //update state\n        this.setState({\n            fishes : fishes\n        })\n\n    }\n\n    loadSampleFishes = () => {\n        this.setState({\n            fishes: sampleFishes\n        })\n    }\n\n    addToOrder = (key) => {\n        const order = {...this.state.order};\n        order[key] = order[key] + 1 || 1;\n        this.setState({\n            order: order\n        })\n    }\n\n    removeFromOrder = (key) => {\n        const order = {...this.state.order};\n        delete order[key];\n        this.setState({\n            order\n        })\n    }\n\n    render(){\n        return (\n            <div className=\"catch-of-the-day\">\n                <div className=\"menu\">\n                    <Header tagline=\"Shaundai is super cool\" />\n                    <ul className='fishes'>\n                        {Object.keys(this.state.fishes).map(key => <Fish key={key} index={key} details={this.state.fishes[key]} addToOrder={this.addToOrder} />)}\n                    </ul>\n                </div>\n                <Order fishes={this.state.fishes} order={this.state.order} removeFromOrder={this.removeFromOrder} />\n                <Inventory\n                    addFish={this.addFish}\n                    updateFish={this.updateFish}\n                    deleteFish={this.deleteFish}\n                    loadSampleFishes={this.loadSampleFishes}\n                    fishes={this.state.fishes}\n                    storeId={this.props.match.params.storeId} />\n            </div>\n            )\n    }\n}\n\nexport default App;","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport StorePicker from './StorePicker';\nimport NotFound from './NotFound';\nimport App from './App';\n\nconst Router = () => (\n    <BrowserRouter>\n    <Switch>\n        <Route exact path='/' component={StorePicker} />\n        <Route path=\"/store/:storeId\" component={App} />\n        <Route component={NotFound} />\n    </Switch>\n    </BrowserRouter>\n)\n\nexport default Router;","import React from 'react';\nimport { render } from 'react-dom';\nimport \"./css/style.css\";\nimport Router from './components/Router';\n\nrender(<Router />, document.querySelector('#main'));"],"sourceRoot":""}