{"ast":null,"code":"import _objectSpread from \"/Users/Shaundai/Documents/Coding/Learning/Wesbos/React-For-Beginners-Starter-Files-master/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/Shaundai/Documents/Coding/Learning/Wesbos/React-For-Beginners-Starter-Files-master/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Shaundai/Documents/Coding/Learning/Wesbos/React-For-Beginners-Starter-Files-master/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Shaundai/Documents/Coding/Learning/Wesbos/React-For-Beginners-Starter-Files-master/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Shaundai/Documents/Coding/Learning/Wesbos/React-For-Beginners-Starter-Files-master/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Shaundai/Documents/Coding/Learning/Wesbos/React-For-Beginners-Starter-Files-master/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Shaundai/Documents/Coding/Learning/Wesbos/React-For-Beginners-Starter-Files-master/catch-of-the-day/src/components/App.js\";\nimport React from 'react';\nimport Header from './Header';\nimport Order from './Order';\nimport Inventory from './Inventory';\nimport sampleFishes from '../sample-fishes';\nimport Fish from './Fish';\nimport base from '../base';\n\nvar App =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(App, _React$Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      fishes: {},\n      order: {}\n    };\n\n    _this.addFish = function (fish) {\n      var fishes = _objectSpread({}, _this.state.fishes); // use spread operator to make a clone of existing state instead of mutating array\n\n\n      fishes[\"fish\".concat(Date.now())] = fish; //uses date.now to create a new property on the this.state.fishes that will be a new fish object\n\n      _this.setState({\n        fishes: fishes\n      });\n    };\n\n    _this.updateFish = function (key, updatedFish) {\n      //take copy of the current state\n      var fishes = _objectSpread({}, _this.state.fishes); //update the state to that of the updatedFish we took in\n\n\n      fishes[key] = updatedFish; //set the state with the updatedFish'\n\n      _this.setState({\n        fishes: fishes\n      });\n    };\n\n    _this.deleteFish = function (key) {\n      //copy state\n      var fishes = _objectSpread({}, _this.state.fishes); //set fish we don't want to null\n\n\n      fishes[key] = null; //update state\n\n      _this.setState({\n        fishes: fishes\n      });\n    };\n\n    _this.loadSampleFishes = function () {\n      _this.setState({\n        fishes: sampleFishes\n      });\n    };\n\n    _this.addToOrder = function (key) {\n      var order = _objectSpread({}, _this.state.order);\n\n      order[key] = order[key] + 1 || 1;\n\n      _this.setState({\n        order: order\n      });\n    };\n\n    _this.removeFromOrder = function (key) {\n      var order = _objectSpread({}, _this.state.order);\n\n      order[key];\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var params = this.props.match.params;\n      var localStorageRef = localStorage.getItem(params.storeId);\n\n      if (localStorageRef) {\n        this.setState({\n          order: JSON.parse(localStorageRef)\n        });\n      }\n\n      this.ref = base.syncState(\"\".concat(params.storeId, \"/fishes\"), {\n        context: this,\n        state: 'fishes'\n      });\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      localStorage.setItem(this.props.match.params.storeId, JSON.stringify(this.state.order));\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      base.removeBinding(this.ref);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"catch-of-the-day\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"menu\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(Header, {\n        tagline: \"Shaundai is super cool\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }), React.createElement(\"ul\", {\n        className: \"fishes\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, Object.keys(this.state.fishes).map(function (key) {\n        return React.createElement(Fish, {\n          key: key,\n          index: key,\n          details: _this2.state.fishes[key],\n          addToOrder: _this2.addToOrder,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92\n          },\n          __self: this\n        });\n      }))), React.createElement(Order, {\n        fishes: this.state.fishes,\n        order: this.state.order,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }), React.createElement(Inventory, {\n        addFish: this.addFish,\n        updateFish: this.updateFish,\n        deleteFish: this.deleteFish,\n        loadSampleFishes: this.loadSampleFishes,\n        fishes: this.state.fishes,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/Shaundai/Documents/Coding/Learning/Wesbos/React-For-Beginners-Starter-Files-master/catch-of-the-day/src/components/App.js"],"names":["React","Header","Order","Inventory","sampleFishes","Fish","base","App","state","fishes","order","addFish","fish","Date","now","setState","updateFish","key","updatedFish","deleteFish","loadSampleFishes","addToOrder","removeFromOrder","params","props","match","localStorageRef","localStorage","getItem","storeId","JSON","parse","ref","syncState","context","setItem","stringify","removeBinding","Object","keys","map","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Header from './Header';\nimport Order from './Order';\nimport Inventory from './Inventory';\nimport sampleFishes from '../sample-fishes';\nimport Fish from './Fish';\nimport base from '../base';\n\nclass App extends React.Component {\n    state = {\n        fishes: {},\n        order: {}\n    };\ncomponentDidMount(){\n    const { params } = this.props.match;\n    const localStorageRef = localStorage.getItem(params.storeId);\n    if(localStorageRef){\n        this.setState({\n            order: JSON.parse(localStorageRef)\n        })\n    }\n    this.ref = base.syncState(`${params.storeId}/fishes`, {\n        context: this,\n        state: 'fishes'\n    })\n}\n\ncomponentDidUpdate(){\n    localStorage.setItem(this.props.match.params.storeId, JSON.stringify(this.state.order))\n}\n\ncomponentWillUnmount(){\n    base.removeBinding(this.ref);\n}\n\n    addFish = fish => {\n        const fishes = { ...this.state.fishes }; // use spread operator to make a clone of existing state instead of mutating array\n        fishes[`fish${Date.now()}`] = fish; //uses date.now to create a new property on the this.state.fishes that will be a new fish object\n        this.setState({\n            fishes: fishes\n        })\n    }\n\n    updateFish = (key, updatedFish) => {\n        //take copy of the current state\n        const fishes = { ...this.state.fishes };\n        //update the state to that of the updatedFish we took in\n        fishes[key] = updatedFish\n        //set the state with the updatedFish'\n        this.setState({\n            fishes: fishes\n        })\n    }\n    deleteFish = key => {\n        //copy state\n        const fishes = {...this.state.fishes}\n        //set fish we don't want to null\n        fishes[key] = null;\n        //update state\n        this.setState({\n            fishes : fishes\n        })\n\n    }\n\n    loadSampleFishes = () => {\n        this.setState({\n            fishes: sampleFishes\n        })\n    }\n\n    addToOrder = (key) => {\n        const order = {...this.state.order};\n        order[key] = order[key] + 1 || 1;\n        this.setState({\n            order: order\n        })\n    }\n\n    removeFromOrder = (key) => {\n        const order = {...this.state.order};\n        order[key]\n\n    }\n\n    render(){\n        return (\n            <div className=\"catch-of-the-day\">\n                <div className=\"menu\">\n                    <Header tagline=\"Shaundai is super cool\" />\n                    <ul className='fishes'>\n                        {Object.keys(this.state.fishes).map(key => <Fish key={key} index={key} details={this.state.fishes[key]} addToOrder={this.addToOrder} />)}\n                    </ul>\n                </div>\n                <Order fishes={this.state.fishes} order={this.state.order} />\n                <Inventory addFish={this.addFish} updateFish={this.updateFish} deleteFish={this.deleteFish} loadSampleFishes={this.loadSampleFishes} fishes={this.state.fishes} />\n            </div>\n            )\n    }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}